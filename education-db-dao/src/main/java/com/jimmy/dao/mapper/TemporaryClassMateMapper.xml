<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimmy.dao.mapper.TemporaryClassMateMapper">
    <resultMap id="BaseResultMap" type="com.jimmy.dao.entity.TemporaryClassMate">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="modify_id" property="modifyId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="site_id" property="siteId" jdbcType="BIGINT"/>
        <result column="description" property="description" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, course_id,description, is_deleted, create_id, modify_id, create_time, modify_time,
    site_id
  </sql>
    <select id="find" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_temporary_class_mate
        where course_id = #{courseId,jdbcType=BIGINT}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>

    </select>
    <delete id="deleted">
        delete from t_temporary_class_mate
        where id = #{id,jdbcType=BIGINT}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.jimmy.dao.entity.TemporaryClassMate"  keyProperty="id" useGeneratedKeys="true">
    insert into t_temporary_class_mate (name, course_id,
      is_deleted, create_id, modify_id, 
      create_time, modify_time, site_id, 
      description)
    values ( #{name,jdbcType=VARCHAR}, #{courseId,jdbcType=BIGINT},
     0, #{createId,jdbcType=BIGINT}, #{modifyId,jdbcType=BIGINT},
    now(),now(), #{siteId,jdbcType=BIGINT},
      #{description,jdbcType=LONGVARCHAR})
  </insert>
</mapper>