<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimmy.dao.mapper.TemporaryStudentClassMateMapper">
    <resultMap id="BaseResultMap" type="com.jimmy.dao.entity.TemporaryStudentClassMate">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="temporary_class_id" property="temporaryClassId" jdbcType="BIGINT"/>
        <result column="classmate_id" property="classmateId" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="modify_id" property="modifyId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="site_id" property="siteId" jdbcType="BIGINT"/>
        <result column="is_register" property="isRegister" />
        <result column="is_ask_level" property="isAskLevel" />
        <result column="machine_id" property="machineId" />
        <result column="register_command_id" property="registerCommandId" />
    </resultMap>
    <sql id="Base_Column_List">
    id, temporary_class_id, register_command_id,is_register,is_ask_level,machine_id,classmate_id, student_id, create_id, modify_id, create_time,
    modify_time, site_id
  </sql>
    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_temporary_student_class_mate
        where temporary_class_id = #{tempClassMateId,jdbcType=BIGINT}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </select>
    <select id="listByMachine" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_temporary_student_class_mate
        where temporary_class_id = #{tempClassMateId,jdbcType=BIGINT} AND machine_id=#{machineId}
        AND site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </select>
    <delete id="deleted" parameterType="java.lang.Long">
        delete from t_temporary_student_class_mate
        where temporary_class_id = #{tempClassMateId,jdbcType=BIGINT}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.jimmy.dao.entity.TemporaryStudentClassMate" keyProperty="id" useGeneratedKeys="true">
    insert into t_temporary_student_class_mate ( temporary_class_id, classmate_id,
      student_id, create_id, modify_id, 
      create_time, modify_time, site_id
      )
    values ( #{temporaryClassId,jdbcType=BIGINT}, #{classmateId,jdbcType=BIGINT},
      #{studentId,jdbcType=BIGINT}, #{createId,jdbcType=BIGINT}, #{modifyId,jdbcType=BIGINT}, 
     now(),now(), #{siteId,jdbcType=BIGINT}
      )
  </insert>
    <select id="listClassMateId" resultType="java.lang.Long">
        select
        DISTINCT classmate_id
        from t_temporary_student_class_mate
        where temporary_class_id = #{tempClassMateId,jdbcType=BIGINT}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </select>

    <select id="count" resultType="java.lang.Long">
        select
        count(id)
        from t_temporary_student_class_mate
        where temporary_class_id = #{tempClassMateId,jdbcType=BIGINT}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </select>
    <select id="listBySize" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_temporary_student_class_mate
        where temporary_class_id = #{tempClassMateId,jdbcType=BIGINT}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        ORDER BY create_time DESC
        limit #{startNum},#{limitNum}
    </select>
    <update id="updateByCourseStatus" parameterType="com.jimmy.dao.entity.TemporaryStudentClassMate" >
        update t_temporary_student_class_mate
        <set >
            <if test="isRegister != null">
                is_register = #{isRegister},
            </if>
            <if test="isAskLevel != null" >
                is_ask_level = #{isAskLevel},
            </if>
            <if test="registerCommandId != null" >
                register_command_id = #{registerCommandId},
            </if>
            <if test="machineId != null" >
                machine_id = #{machineId},
            </if>
            modify_id = #{modifyId,jdbcType=BIGINT},
            modify_time = now(),
        </set>
        where temporary_class_id = #{temporaryClassId}
        <if test="studentId!=null">
            and student_id=#{studentId}
        </if>
        and  site_id=#{siteId}
    </update>

</mapper>