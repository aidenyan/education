<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimmy.dao.mapper.RoleInfoMapper">
    <resultMap id="BaseResultMap" type="com.jimmy.dao.entity.RoleInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="role_desc" property="roleDesc" jdbcType="VARCHAR"/>
        <result column="deleted" property="deleted" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="modify_id" property="modifyId" jdbcType="BIGINT"/>
        <result column="site_id" property="siteId" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, role_desc, deleted, create_time, modify_time, create_id, modify_id, site_id
  </sql>
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_role_info
        where id = #{id} AND deleted=0
       and site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(" >
            #{siteId}
        </foreach>
    </select>
    <insert id="insert" parameterType="com.jimmy.dao.entity.RoleInfo" useGeneratedKeys="true" keyProperty="id">
    insert into t_role_info ( name, role_desc,
      deleted, create_time, modify_time, 
      create_id, modify_id, site_id
      )
    values ( #{name,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR},
      #{deleted,jdbcType=TINYINT}, now(),now(),
      #{createId,jdbcType=BIGINT}, #{modifyId,jdbcType=BIGINT}, #{siteId,jdbcType=BIGINT}
      )
  </insert>


    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_role_info
        where
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        <if test=" roleName != null">
        and name LIKE concat('%',#{roleName},'%')
        </if>
        AND deleted=0
    </select>

    <update id="updateProperty" parameterType="com.jimmy.dao.entity.RoleInfo">
        update t_role_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=TINYINT},
            </if>
            modify_time =now(),
            modify_id = #{modifyId},
        </set>
        where id = #{id,jdbcType=BIGINT}     AND deleted=0 and site_id=#{siteId}
    </update>
    <update id="update" parameterType="com.jimmy.dao.entity.RoleInfo">
    update t_role_info
    set name = #{name,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      modify_time =now(),
      modify_id = #{modifyId}

    where id = #{id,jdbcType=BIGINT}     AND deleted=0 and site_id=#{siteId}
  </update>
</mapper>