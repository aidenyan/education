<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimmy.dao.mapper.StudentInfoMapper">
    <resultMap id="BaseResultMap" type="com.jimmy.dao.entity.StudentInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="classmate_id" property="classmateId" jdbcType="BIGINT"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="is_enabled" property="isEnabled" jdbcType="BIT"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="header_url" property="headerUrl" />
        <result column="birth_time" property="birthTime" jdbcType="TIMESTAMP"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="face_version" property="faceVersion"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="app_token" property="appToken" jdbcType="VARCHAR"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
        <result column="machine_id" property="machineId" jdbcType="BIGINT"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="modify_id" property="modifyId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="site_id" property="siteId" jdbcType="BIGINT"/>
        <result column="header_info" property="headerInfo" />
    </resultMap>

    <sql id="Base_Column_List">
    id, classmate_id, face_version,name,machine_id, sex, email, is_enabled, password, real_name, header_url,
    birth_time, mobile, telephone, app_token, id_card,is_deleted, create_id, modify_id, create_time,
    modify_time,  header_info, site_id
  </sql>

    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student_info
        where id = #{id} and is_deleted=0 AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </select>
    <select id="findByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student_info
        where  is_deleted=0 AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        and name =#{name}
    </select>
    <select id="listByIdList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student_info
        where  is_deleted=0 AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        and id  IN
        <foreach collection="idList" separator="," item="id" close=")" open="(">
            #{id}
        </foreach>
    </select>

    <select id="listByClassMate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student_info
        where  is_deleted=0 AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        <if test=" realName != null and realName != '' ">
            and real_name like concat('%',#{realName},'%')
        </if>
        and classmate_id  IN
        <foreach collection="classMateIdList" separator="," item="id" close=")" open="(">
            #{id}
        </foreach>
    </select>
    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student_info
        where  is_deleted=0 AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        <if test=" name != null">
           and name like concat('%','#{name}','%')
        </if>
    </select>


    <insert id="insert" parameterType="com.jimmy.dao.entity.StudentInfo"  useGeneratedKeys="true" keyProperty="id">
    insert into t_student_info (face_version,id_card,machine_id,classmate_id, name,
      sex, email, is_enabled, 
      password, real_name, header_url, 
      birth_time, mobile, telephone, 
      app_token, is_deleted, create_id, 
      modify_id, create_time, modify_time, 
      site_id, header_info)
    values (#{faceVersion},#{idCard},#{machineId}, #{classmateId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
      #{sex,jdbcType=TINYINT}, #{email,jdbcType=VARCHAR}, #{isEnabled,jdbcType=BIT}, 
      #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{headerUrl},
      #{birthTime,jdbcType=TIMESTAMP}, #{mobile,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{appToken,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, #{createId,jdbcType=BIGINT}, 
      #{modifyId,jdbcType=BIGINT},now(), now(),
      #{siteId,jdbcType=BIGINT}, #{headerInfo})
  </insert>

    <update id="updateProperty" parameterType="com.jimmy.dao.entity.StudentInfo">
        update t_student_info
        <set>
            <if test="machineId != null">
                machine_id = #{machineId},
            </if>
            <if test="idCard != null">
                id_card = #{idCard},
            </if>

            <if test="classmateId != null">
                classmate_id = #{classmateId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isEnabled != null">
                is_enabled = #{isEnabled,jdbcType=BIT},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="headerUrl != null">
                header_url = #{headerUrl},
            </if>
            <if test="birthTime != null">
                birth_time = #{birthTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="appToken != null">
                app_token = #{appToken,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            modify_id = #{modifyId,jdbcType=BIGINT},
            modify_time = now(),
            <if test="headerInfo != null">
                header_info = #{headerInfo},
            </if>
            <if test="faceVersion != null">
                face_version = #{faceVersion,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT} and is_deleted=0 and  site_id=#{siteId}
    </update>
    <update id="update" parameterType="com.jimmy.dao.entity.StudentInfo">
    update t_student_info
    set classmate_id = #{classmateId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      id_card = #{idCard},
      sex = #{sex,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      is_enabled = #{isEnabled,jdbcType=BIT},
      real_name = #{realName,jdbcType=VARCHAR},
      header_url = #{headerUrl},
      birth_time = #{birthTime,jdbcType=TIMESTAMP},
      mobile = #{mobile,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      modify_id = #{modifyId,jdbcType=BIGINT},
        <if test="password != null">
            password = #{password,jdbcType=VARCHAR},
        </if>
      modify_time = now()
    where id = #{id,jdbcType=BIGINT} and is_deleted=0 and  site_id=#{siteId}
  </update>

</mapper>