<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimmy.dao.mapper.QuestionMapper">
    <resultMap id="BaseResultMap" type="com.jimmy.dao.entity.Question">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="question" property="question" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="result" property="result" jdbcType="VARCHAR"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="modify_id" property="modifyId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="site_id" property="siteId" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, question, type,is_deleted, result, create_id, modify_id, create_time, modify_time, site_id
  </sql>
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_question
        where id = #{id,jdbcType=BIGINT} and is_deleted=0
        and site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </select>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_question
        where is_deleted=0
        and site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        <if test=" question != null">
            AND question LIKE concat('%',#{question},'%')
        </if>
    </select>
    <select id="listPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_question
        where is_deleted=0
        and site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        <if test=" question != null">
            AND question LIKE concat('%',#{question},'%')
        </if>
        ORDER BY create_time DESC
        limit #{startNum},#{pageSize}
    </select>
    <select id="count" resultType="java.lang.Long">
        select
        count(id)
        from t_question
        where is_deleted=0
        and site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
        <if test=" question != null">
            AND question LIKE concat('%',#{question},'%')
        </if>
    </select>

    <insert id="insert" parameterType="com.jimmy.dao.entity.Question" keyProperty="id" useGeneratedKeys="true">
    insert into t_question (is_deleted, question, type,
      result, create_id, modify_id, 
      create_time, modify_time, site_id
      )
    values (#{isDeleted}, #{question,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT},
      #{result,jdbcType=VARCHAR}, #{createId,jdbcType=BIGINT}, #{modifyId,jdbcType=BIGINT}, 
      now(),now(), #{siteId,jdbcType=BIGINT}
      )
  </insert>

    <update id="updateProperty" parameterType="com.jimmy.dao.entity.Question">
        update t_question
        <set>
            <if test="question != null">
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=VARCHAR},
            </if>
            modify_id = #{modifyId,jdbcType=BIGINT},
            modify_time =now(),
        </set>
        where id = #{id,jdbcType=BIGINT} and site_id = #{siteId,jdbcType=BIGINT} and is_deleted=0
    </update>
    <update id="update" parameterType="com.jimmy.dao.entity.Question">
    update t_question
    set question = #{question,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      result = #{result,jdbcType=VARCHAR},
      modify_id = #{modifyId,jdbcType=BIGINT},
      modify_time =now()
    where id = #{id,jdbcType=BIGINT}  and site_id = #{siteId,jdbcType=BIGINT} and is_deleted=0
  </update>
</mapper>