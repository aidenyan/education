<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimmy.dao.mapper.StudentStarInfoMapper">
    <resultMap id="BaseResultMap" type="com.jimmy.dao.entity.StudentStarInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="tearcher_id" property="tearcherId" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="create_id" property="createId" jdbcType="BIGINT"/>
        <result column="modify_id" property="modifyId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="site_id" property="siteId" jdbcType="BIGINT"/>
        <result column="name" property="name" />
    </resultMap>
    <sql id="Base_Column_List">
    id, tearcher_id, student_id, create_id, modify_id, create_time, modify_time, site_id,name
  </sql>
    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student_star_info
        where create_time &lt;=#{endDate} and create_time >=#{startDate}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </select>
    <delete id="deleted">
        delete from t_student_star_info
        where id = #{id}
        AND
        site_id IN
        <foreach collection="siteIdList" separator="," item="siteId" close=")" open="(">
            #{siteId}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.jimmy.dao.entity.StudentStarInfo"  keyProperty="id" useGeneratedKeys="true">
    insert into t_student_star_info ( name,tearcher_id, student_id,
      create_id, modify_id, create_time, 
      modify_time, site_id)
    values ( #{name},#{tearcherId,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT},
      #{createId,jdbcType=BIGINT}, #{modifyId,jdbcType=BIGINT}, now(),
      now(), #{siteId,jdbcType=BIGINT})
  </insert>

</mapper>